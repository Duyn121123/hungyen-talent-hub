import { useState } from "react";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Badge } from "@/components/ui/badge";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Progress } from "@/components/ui/progress";
import { 
  Search, 
  User, 
  Star, 
  Award, 
  Target, 
  Heart,
  Brain,
  Users,
  TrendingUp,
  MapPin,
  GraduationCap,
  Briefcase,
  Phone,
  Mail,
  Filter
} from "lucide-react";

const CandidateSearch = () => {
  const [searchTerm, setSearchTerm] = useState("");
  const [selectedPosition, setSelectedPosition] = useState("");
  const [selectedLocation, setSelectedLocation] = useState("");

  // Mock data for candidates with 4-pillar assessment
  const candidates = [
    {
      id: 1,
      name: "Nguy·ªÖn VƒÉn An",
      position: "K·ªπ s∆∞ ph·∫ßn m·ªÅm",
      experience: "5 nƒÉm",
      location: "H∆∞ng Y√™n",
      education: "ƒê·∫°i h·ªçc C√¥ng ngh·ªá",
      phone: "0123456789",
      email: "an@email.com",
      avatar: "üë®‚Äçüíª",
      assessment: {
        professional: { score: 85, details: "Th·∫°c sƒ© CNTT, 5 nƒÉm kinh nghi·ªám fullstack, ch·ª©ng ch·ªâ AWS" },
        social: { score: 78, details: "3 d·ª± √°n m√£ ngu·ªìn m·ªü, ƒë√†o t·∫°o sinh vi√™n, t√¨nh nguy·ªán IT" },
        personal: { score: 82, details: "L√£nh ƒë·∫°o nh√≥m 8 ng∆∞·ªùi, giao ti·∫øp t·ªët, s√°ng t·∫°o trong gi·∫£i ph√°p" },
        strategic: { score: 90, details: "Chuy√™n m√¥n ph√π h·ª£p chuy·ªÉn ƒë·ªïi s·ªë, cam k·∫øt l√¢u d√†i v·ªõi H∆∞ng Y√™n" }
      },
      overallScore: 84
    },
    {
      id: 2,
      name: "Tr·∫ßn Th·ªã B√¨nh",
      position: "Chuy√™n vi√™n Marketing",
      experience: "4 nƒÉm",
      location: "H∆∞ng Y√™n",
      education: "ƒê·∫°i h·ªçc Kinh t·∫ø",
      phone: "0987654321",
      email: "binh@email.com",
      avatar: "üë©‚Äçüíº",
      assessment: {
        professional: { score: 80, details: "C·ª≠ nh√¢n Marketing, 4 nƒÉm kinh nghi·ªám digital marketing" },
        social: { score: 88, details: "T·ªï ch·ª©c 5 chi·∫øn d·ªãch t·ª´ thi·ªán, qu·∫£ng b√° s·∫£n ph·∫©m ƒë·ªãa ph∆∞∆°ng" },
        personal: { score: 85, details: "Kh·∫£ nƒÉng thuy·∫øt ph·ª•c cao, l√†m vi·ªác nh√≥m t·ªët, t∆∞ duy s√°ng t·∫°o" },
        strategic: { score: 83, details: "Hi·ªÉu bi·∫øt th·ªã tr∆∞·ªùng ƒë·ªãa ph∆∞∆°ng, ƒë·ªãnh h∆∞·ªõng ph√°t tri·ªÉn th∆∞∆°ng hi·ªáu" }
      },
      overallScore: 84
    },
    {
      id: 3,
      name: "L√™ Minh C∆∞·ªùng",
      position: "K·ªπ s∆∞ n√¥ng nghi·ªáp",
      experience: "3 nƒÉm",
      location: "H∆∞ng Y√™n",
      education: "ƒê·∫°i h·ªçc N√¥ng nghi·ªáp",
      phone: "0369852147",
      email: "cuong@email.com",
      avatar: "üë®‚Äçüåæ",
      assessment: {
        professional: { score: 87, details: "K·ªπ s∆∞ n√¥ng nghi·ªáp, chuy√™n c√¥ng ngh·ªá cao, IoT farming" },
        social: { score: 92, details: "H∆∞·ªõng d·∫´n 50+ h·ªô n√¥ng d√¢n, d·ª± √°n c√¢y tr·ªìng s·∫°ch" },
        personal: { score: 80, details: "Ki√™n nh·∫´n, t·ªâ m·ªâ, kh·∫£ nƒÉng th√≠ch ·ª©ng cao v·ªõi m√¥i tr∆∞·ªùng" },
        strategic: { score: 95, details: "ƒê√∫ng ƒë·ªãnh h∆∞·ªõng n√¥ng nghi·ªáp c√¥ng ngh·ªá cao c·ªßa t·ªânh" }
      },
      overallScore: 89
    },
    {
      id: 4,
      name: "Ph·∫°m Thu H∆∞∆°ng",
      position: "Chuy√™n vi√™n t√†i ch√≠nh",
      experience: "6 nƒÉm",
      location: "H∆∞ng Y√™n",
      education: "ƒê·∫°i h·ªçc Kinh t·∫ø Qu·ªëc d√¢n",
      phone: "0567891234",
      email: "huong@email.com",
      avatar: "üë©‚Äçüíº",
      assessment: {
        professional: { score: 88, details: "CPA, 6 nƒÉm kinh nghi·ªám t√†i ch√≠nh doanh nghi·ªáp, ph√¢n t√≠ch ƒë·∫ßu t∆∞" },
        social: { score: 75, details: "T∆∞ v·∫•n t√†i ch√≠nh mi·ªÖn ph√≠ cho doanh nghi·ªáp nh·ªè" },
        personal: { score: 86, details: "T·ªâ m·ªâ, tr√°ch nhi·ªám cao, kh·∫£ nƒÉng ph√¢n t√≠ch t·ªët" },
        strategic: { score: 81, details: "Hi·ªÉu bi·∫øt ch√≠nh s√°ch thu·∫ø, h·ªó tr·ª£ ph√°t tri·ªÉn doanh nghi·ªáp" }
      },
      overallScore: 83
    }
  ];

  const getScoreColor = (score: number) => {
    if (score >= 85) return "text-green-600 bg-green-50";
    if (score >= 70) return "text-yellow-600 bg-yellow-50";
    return "text-red-600 bg-red-50";
  };

  const getScoreLabel = (score: number) => {
    if (score >= 85) return "Xu·∫•t s·∫Øc";
    if (score >= 70) return "T·ªët";
    return "C·∫ßn c·∫£i thi·ªán";
  };

  const filteredCandidates = candidates.filter(candidate => 
    candidate.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
    candidate.position.toLowerCase().includes(searchTerm.toLowerCase())
  );

  return (
    <div className="space-y-6">
      {/* Search Header */}
      <Card className="bg-gradient-to-br from-card to-muted/20">
        <CardHeader>
          <CardTitle className="flex items-center">
            <Search className="w-5 h-5 mr-2 text-primary" />
            T√¨m ki·∫øm nh√¢n t√†i H∆∞ng Y√™n
          </CardTitle>
          <CardDescription>
            H·ªá th·ªëng ƒë√°nh gi√° nh√¢n t√†i d·ª±a tr√™n 4 tr·ª• c·ªôt: NƒÉng l·ª±c chuy√™n m√¥n, ƒê√≥ng g√≥p x√£ h·ªôi, K·ªπ nƒÉng c√° nh√¢n, Ph√π h·ª£p chi·∫øn l∆∞·ª£c
          </CardDescription>
        </CardHeader>
        <CardContent>
          <div className="flex flex-col md:flex-row gap-4">
            <div className="flex-1">
              <Input
                placeholder="T√¨m ki·∫øm theo t√™n ho·∫∑c v·ªã tr√≠..."
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
                className="w-full"
              />
            </div>
            <Select value={selectedPosition} onValueChange={setSelectedPosition}>
              <SelectTrigger className="w-full md:w-48">
                <SelectValue placeholder="V·ªã tr√≠" />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="all">T·∫•t c·∫£ v·ªã tr√≠</SelectItem>
                <SelectItem value="engineer">K·ªπ s∆∞</SelectItem>
                <SelectItem value="marketing">Marketing</SelectItem>
                <SelectItem value="finance">T√†i ch√≠nh</SelectItem>
              </SelectContent>
            </Select>
            <Select value={selectedLocation} onValueChange={setSelectedLocation}>
              <SelectTrigger className="w-full md:w-48">
                <SelectValue placeholder="ƒê·ªãa ƒëi·ªÉm" />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="all">To√†n t·ªânh</SelectItem>
                <SelectItem value="hungyen">TP H∆∞ng Y√™n</SelectItem>
                <SelectItem value="vanlan">VƒÉn L√¢m</SelectItem>
                <SelectItem value="vanbinh">VƒÉn B√¨nh</SelectItem>
              </SelectContent>
            </Select>
            <Button>
              <Filter className="w-4 h-4 mr-2" />
              L·ªçc
            </Button>
          </div>
        </CardContent>
      </Card>

      {/* Candidates List */}
      <div className="grid gap-6">
        {filteredCandidates.map((candidate) => (
          <Card key={candidate.id} className="bg-gradient-to-br from-card to-muted/20 shadow-card">
            <CardContent className="p-6">
              <div className="flex flex-col lg:flex-row gap-6">
                {/* Basic Info */}
                <div className="lg:w-1/3">
                  <div className="flex items-start space-x-4">
                    <div className="text-4xl">{candidate.avatar}</div>
                    <div className="flex-1">
                      <h3 className="text-xl font-bold text-foreground">{candidate.name}</h3>
                      <p className="text-primary font-medium">{candidate.position}</p>
                      <div className="space-y-2 mt-3 text-sm text-muted-foreground">
                        <div className="flex items-center">
                          <Briefcase className="w-4 h-4 mr-2" />
                          {candidate.experience}
                        </div>
                        <div className="flex items-center">
                          <MapPin className="w-4 h-4 mr-2" />
                          {candidate.location}
                        </div>
                        <div className="flex items-center">
                          <GraduationCap className="w-4 h-4 mr-2" />
                          {candidate.education}
                        </div>
                      </div>
                      <div className="flex items-center space-x-4 mt-4">
                        <Button variant="outline" size="sm">
                          <Phone className="w-3 h-3 mr-1" />
                          G·ªçi
                        </Button>
                        <Button variant="outline" size="sm">
                          <Mail className="w-3 h-3 mr-1" />
                          Email
                        </Button>
                      </div>
                    </div>
                  </div>
                </div>

                {/* Assessment Details */}
                <div className="lg:w-2/3">
                  <div className="flex items-center justify-between mb-4">
                    <h4 className="text-lg font-semibold text-foreground">ƒê√°nh gi√° 4 tr·ª• c·ªôt</h4>
                    <div className="flex items-center space-x-2">
                      <Badge className={`px-3 py-1 ${getScoreColor(candidate.overallScore)}`}>
                        <Star className="w-3 h-3 mr-1" />
                        {candidate.overallScore}/100 - {getScoreLabel(candidate.overallScore)}
                      </Badge>
                    </div>
                  </div>

                  <Tabs defaultValue="professional" className="w-full">
                    <TabsList className="grid w-full grid-cols-4">
                      <TabsTrigger value="professional" className="text-xs">
                        <Brain className="w-3 h-3 mr-1" />
                        Chuy√™n m√¥n
                      </TabsTrigger>
                      <TabsTrigger value="social" className="text-xs">
                        <Heart className="w-3 h-3 mr-1" />
                        X√£ h·ªôi
                      </TabsTrigger>
                      <TabsTrigger value="personal" className="text-xs">
                        <Users className="w-3 h-3 mr-1" />
                        C√° nh√¢n
                      </TabsTrigger>
                      <TabsTrigger value="strategic" className="text-xs">
                        <Target className="w-3 h-3 mr-1" />
                        Chi·∫øn l∆∞·ª£c
                      </TabsTrigger>
                    </TabsList>

                    <TabsContent value="professional" className="space-y-3">
                      <div className="flex items-center justify-between">
                        <span className="text-sm font-medium">NƒÉng l·ª±c chuy√™n m√¥n</span>
                        <span className="text-sm font-bold">{candidate.assessment.professional.score}/100</span>
                      </div>
                      <Progress value={candidate.assessment.professional.score} className="h-2" />
                      <p className="text-sm text-muted-foreground">{candidate.assessment.professional.details}</p>
                    </TabsContent>

                    <TabsContent value="social" className="space-y-3">
                      <div className="flex items-center justify-between">
                        <span className="text-sm font-medium">ƒê√≥ng g√≥p x√£ h·ªôi</span>
                        <span className="text-sm font-bold">{candidate.assessment.social.score}/100</span>
                      </div>
                      <Progress value={candidate.assessment.social.score} className="h-2" />
                      <p className="text-sm text-muted-foreground">{candidate.assessment.social.details}</p>
                    </TabsContent>

                    <TabsContent value="personal" className="space-y-3">
                      <div className="flex items-center justify-between">
                        <span className="text-sm font-medium">K·ªπ nƒÉng v√† ph·∫©m ch·∫•t</span>
                        <span className="text-sm font-bold">{candidate.assessment.personal.score}/100</span>
                      </div>
                      <Progress value={candidate.assessment.personal.score} className="h-2" />
                      <p className="text-sm text-muted-foreground">{candidate.assessment.personal.details}</p>
                    </TabsContent>

                    <TabsContent value="strategic" className="space-y-3">
                      <div className="flex items-center justify-between">
                        <span className="text-sm font-medium">Ph√π h·ª£p chi·∫øn l∆∞·ª£c t·ªânh</span>
                        <span className="text-sm font-bold">{candidate.assessment.strategic.score}/100</span>
                      </div>
                      <Progress value={candidate.assessment.strategic.score} className="h-2" />
                      <p className="text-sm text-muted-foreground">{candidate.assessment.strategic.details}</p>
                    </TabsContent>
                  </Tabs>

                  <div className="flex justify-end space-x-3 mt-6">
                    <Button variant="outline">
                      <User className="w-4 h-4 mr-2" />
                      Xem h·ªì s∆° ƒë·∫ßy ƒë·ªß
                    </Button>
                    <Button>
                      <Award className="w-4 h-4 mr-2" />
                      M·ªùi ph·ªèng v·∫•n
                    </Button>
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>
        ))}
      </div>

      {/* Results Summary */}
      <Card className="bg-gradient-to-br from-muted/20 to-card">
        <CardContent className="p-6 text-center">
          <TrendingUp className="w-12 h-12 mx-auto mb-4 text-primary" />
          <h3 className="text-lg font-semibold text-foreground mb-2">
            T√¨m th·∫•y {filteredCandidates.length} ·ª©ng vi√™n ph√π h·ª£p
          </h3>
          <p className="text-muted-foreground">
            ƒê√°nh gi√° d·ª±a tr√™n h·ªá th·ªëng 4 tr·ª• c·ªôt to√†n di·ªán c·ªßa t·ªânh H∆∞ng Y√™n
          </p>
        </CardContent>
      </Card>
    </div>
  );
};

export default CandidateSearch;